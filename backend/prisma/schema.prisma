// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    password  String
    name      String?
    isActive  Boolean  @default(true)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    urls    Url[]
    apiKeys ApiKey[]

    @@map("users")
}

model Url {
    id           Int       @id @default(autoincrement())
    shortCode    String    @unique @map("short_code")
    originalUrl  String    @map("original_url")
    title        String?
    description  String?
    customAlias  String?   @unique @map("custom_alias")
    customDomain String?   @map("custom_domain")
    password     String? // Hashed password for password-protected links
    userId       Int?      @map("user_id")
    clickCount   Int       @default(0) @map("click_count")
    isActive     Boolean   @default(true) @map("is_active")
    expiresAt    DateTime? @map("expires_at")
    createdAt    DateTime  @default(now()) @map("created_at")
    updatedAt    DateTime  @updatedAt @map("updated_at")

    // Relations
    user      User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
    analytics Analytics[]

    // Indexes
    @@index([shortCode])
    @@index([userId])
    @@index([createdAt])
    @@index([isActive])
    @@index([customDomain])
    @@map("urls")
}

model Analytics {
    id        Int      @id @default(autoincrement())
    urlId     Int      @map("url_id")
    ipAddress String?  @map("ip_address")
    userAgent String?  @map("user_agent")
    referer   String?
    country   String?
    city      String?
    createdAt DateTime @default(now()) @map("created_at")
    clickedAt DateTime @default(now()) @map("clicked_at")

    // Relations
    url Url @relation(fields: [urlId], references: [id], onDelete: Cascade)

    // Indexes
    @@index([urlId])
    @@index([clickedAt])
    @@index([ipAddress])
    @@map("analytics")
}

model ApiKey {
    id        Int       @id @default(autoincrement())
    key       String    @unique
    name      String
    userId    Int       @map("user_id")
    isActive  Boolean   @default(true) @map("is_active")
    lastUsed  DateTime? @map("last_used")
    createdAt DateTime  @default(now()) @map("created_at")
    expiresAt DateTime? @map("expires_at")

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([key])
    @@index([userId])
    @@map("api_keys")
}
